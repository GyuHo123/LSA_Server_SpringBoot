name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build with Gradle Wrapper (capture log)
        run: |
          set -o pipefail
          sudo ./gradlew --no-daemon bootjar 2>&1 | tee build.log

      - name: Report failure to Rooty (logs + git diff)
        if: failure()
        env:
          REPORT_URL: ${{ secrets.CI_REPORT_URL }}
        run: |
          set -euo pipefail

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.head.sha }}"
          else
            BASE="${{ github.event.before }}"
            HEAD="${{ github.sha }}"
          fi
          [[ -n "${BASE:-}" ]] || BASE="$(git rev-parse HEAD^ 2>/dev/null || echo '')"
          [[ -n "${HEAD:-}" ]] || HEAD="$(git rev-parse HEAD)"

          git diff --no-color --unified=0 "$BASE...$HEAD" > ci.diff || true
          touch build.log ci.diff

          ERROR_LOGS_JSON="$(tail -n 400 build.log | jq -R -s 'split("\n") | map(select(length>0)) | .[-400:]')"
          TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

          payload=$(jq -n \
            --arg workflowName "${{ github.workflow }}" \
            --arg jobName "${{ github.job }}" \
            --arg repository "${{ github.repository }}" \
            --arg commitSha "${{ github.sha }}" \
            --arg timestamp "$TIMESTAMP" \
            --rawfile diff ci.diff \
            --argjson errorLogs "$ERROR_LOGS_JSON" \
            '{workflowName:$workflowName, jobName:$jobName, errorLogs:$errorLogs, gitDiff:$diff, repository:$repository, commitSha:$commitSha, timestamp:$timestamp}')

          CURL_HEADERS=(-H "Content-Type: application/json")
          if [[ -n "${REPORT_TOKEN:-}" ]]; then
            CURL_HEADERS+=(-H "Authorization: Bearer $REPORT_TOKEN")
          fi

          curl -sS -X POST "$REPORT_URL" "${CURL_HEADERS[@]}" -d "$payload" | cat

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # ... (SCP/재시작 단계에서 로그 수집)
      - name: SCP Transfer (capture log)
        run: |
          set -o pipefail
          scp -P ${{ secrets.PORT }} /home/runner/work/LSA_Server_SpringBoot/LSA_Server_SpringBoot/LSA-0.0.1-SNAPSHOT.jar ${{ secrets.USER }}@${{ secrets.SERVER_IP_ADDRESS }}:/home/ubuntu/LSA_release 2>&1 | tee deploy.log

      - name: Restart server (append log)
        run: |
          set -o pipefail
          ssh -p ${{ secrets.PORT }} ${{ secrets.USER }}@${{ secrets.SERVER_IP_ADDRESS }} 'sudo systemctl restart LSAServer.service' 2>&1 | tee -a deploy.log

      - name: Report failure to Rooty (logs + git diff)
        if: failure()
        env:
          REPORT_URL: ${{ secrets.CI_REPORT_URL }}
        run: |
          set -euo pipefail

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.head.sha }}"
          else
            BASE="${{ github.event.before }}"
            HEAD="${{ github.sha }}"
          fi
          [[ -n "${BASE:-}" ]] || BASE="$(git rev-parse HEAD^ 2>/dev/null || echo '')"
          [[ -n "${HEAD:-}" ]] || HEAD="$(git rev-parse HEAD)"

          git diff --no-color --unified=0 "$BASE...$HEAD" > ci.diff || true
          touch deploy.log ci.diff

          ERROR_LOGS_JSON="$(tail -n 400 deploy.log | jq -R -s 'split("\n") | map(select(length>0)) | .[-400:]')"
          TIMESTAMP="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

          payload=$(jq -n \
            --arg workflowName "${{ github.workflow }}" \
            --arg jobName "${{ github.job }}" \
            --arg repository "${{ github.repository }}" \
            --arg commitSha "${{ github.sha }}" \
            --arg timestamp "$TIMESTAMP" \
            --rawfile diff ci.diff \
            --argjson errorLogs "$ERROR_LOGS_JSON" \
            '{workflowName:$workflowName, jobName:$jobName, errorLogs:$errorLogs, gitDiff:$diff, repository:$repository, commitSha:$commitSha, timestamp:$timestamp}')

          CURL_HEADERS=(-H "Content-Type: application/json")
          if [[ -n "${REPORT_TOKEN:-}" ]]; then
            CURL_HEADERS+=(-H "Authorization: Bearer $REPORT_TOKEN")
          fi

          curl -sS -X POST "$REPORT_URL" "${CURL_HEADERS[@]}" -d "$payload" | cat
